
// События Формы
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	СостояниеФильтр = Перечисления.Диадок_СостояниеДокумента.НеОбработанный;
	
	ПараметрыВСписокДокументов();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ПодключитьВнешнююОбработкуДДПро();
	УстановитьВидимостьКоманд();
	
КонецПроцедуры

// События элементов управления
&НаКлиенте
Процедура СостояниеФильтрПриИзменении(Элемент)
	
	ПараметрыВСписокДокументов();
	УстановитьВидимостьКоманд();
	
КонецПроцедуры

&НаКлиенте
Процедура СписокДокументовВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ЗадатьДействияДляДокумента();
	
КонецПроцедуры

// вспомогательные действия
&НаСервере
Функция ПолучитьКлюч(мДок)
	
	Возврат РегистрыСведений.Диадок_ДействияНадДокументами.СоздатьКлючЗаписи(Новый Структура("Дд_Документ", мДок));
	
КонецФункции

Процедура ПараметрыВСписокДокументов()
	
	СписокДокументов.Параметры.УстановитьЗначениеПараметра("ТекущееСостояние", СостояниеФильтр); 

КонецПроцедуры

&НаКлиенте
Процедура УстановитьВидимостьКоманд()
	
	Элементы.СписокДокументовТестКоманда.Видимость = Ложь;
	
	Если СостояниеФильтр = ПолучитьЗначениеПеречисления("НеОбработанный") Тогда
		Элементы.СписокДокументовВыполнитьДействия.Видимость = Истина;
		Элементы.СписокДокументовОбновитьСведения.Видимость  = Истина;
		Элементы.СписокДокументовДокументСогласован.Видимость= Ложь;
		Элементы.СписокДокументовПодписатьИОтправить.Видимость=Ложь;
	ИначеЕсли СостояниеФильтр = ПолучитьЗначениеПеречисления("НаСогласовании") Тогда
		Элементы.СписокДокументовВыполнитьДействия.Видимость = Ложь;
		Элементы.СписокДокументовОбновитьСведения.Видимость  = Ложь;
		Элементы.СписокДокументовДокументСогласован.Видимость= Истина;
		Элементы.СписокДокументовПодписатьИОтправить.Видимость=Ложь;
	ИначеЕсли СостояниеФильтр = ПолучитьЗначениеПеречисления("ГотовКОтправке") Тогда
		Элементы.СписокДокументовВыполнитьДействия.Видимость = Ложь;
		Элементы.СписокДокументовОбновитьСведения.Видимость  = Ложь;
		Элементы.СписокДокументовДокументСогласован.Видимость= Ложь;
		Элементы.СписокДокументовПодписатьИОтправить.Видимость=Истина;
	ИначеЕсли СостояниеФильтр = ПолучитьЗначениеПеречисления("Завершен") Тогда
		Элементы.СписокДокументовВыполнитьДействия.Видимость = Ложь;
		Элементы.СписокДокументовОбновитьСведения.Видимость  = Ложь;
		Элементы.СписокДокументовДокументСогласован.Видимость= Ложь;
		Элементы.СписокДокументовПодписатьИОтправить.Видимость=Ложь;
	КонецЕсли;
	
КонецПРоцедуры

Функция ПолучитьЗначениеПеречисления(НаименованиеПеречисления)
	
	ЗначениеПеречисления = неопределено;
	Если НаименованиеПеречисления = "НеОбработанный" Тогда
		ЗначениеПеречисления = Перечисления.Диадок_СостояниеДокумента.НеОбработанный;
	ИначеЕсли НаименованиеПеречисления = "НаСогласовании" Тогда
		ЗначениеПеречисления = Перечисления.Диадок_СостояниеДокумента.НаСогласовании;
	ИначеЕсли НаименованиеПеречисления = "ГотовКОтправке" Тогда
		ЗначениеПеречисления = Перечисления.Диадок_СостояниеДокумента.ГотовКОтправке;
	ИначеЕсли НаименованиеПеречисления = "Завершен" Тогда
		ЗначениеПеречисления = Перечисления.Диадок_СостояниеДокумента.Завершен;
	КонецЕсли;
	Возврат ЗначениеПеречисления;
	
КонецФункции


// команды формы
&НаКлиенте
Процедура ВыполнитьДействия(Команда)
	ВыполнитьДействияНаСервере();
КонецПроцедуры

&НаСервере
Процедура ВыполнитьДействияНаСервере()
	
	ОбъектОбработки = РеквизитФормыВЗначение("Объект");
	ОбъектОбработки.ВыполнитьДействияДляДокументов();
	
КонецПроцедуры

&НаКлиенте
Процедура КарточкаВхДокумента(Команда)
	
	мДок = Элементы.СписокДокументов.ТекущиеДанные.Ссылка;
	ПараметрыФормы=	Новый Структура;
	ПараметрыФормы.Вставить("ДокументДД",						мДок);
	ПараметрыФормы.Вставить("ПакетДД",							неопределено);
	ПараметрыФормы.Вставить("ЗакрыватьПриЗакрытииВладельца",	Истина);
	
	мИмяФормы = "ВнешняяОбработка.ОбработкаДДПро.Форма.КарточкаВходящегоДокументаУправляемая";
	ОткрытьФорму(мИмяФормы, ПараметрыФормы, ЭтаФорма); // модальность не нужна

КонецПроцедуры

&НаКлиенте
Процедура ДокументСогласован(Команда)
	
	мДок = Элементы.СписокДокументов.ТекущиеДанные.Ссылка;
	ДокументСогласованНаСервере(мДок);
	ПараметрыВСписокДокументов();
	
КонецПроцедуры

&НаСервере
Процедура ДокументСогласованНаСервере(мДок)

	НовоеСостояние = Перечисления.Диадок_СостояниеДокумента.ГотовКОтправке;
	
	ОбъектОбработки = РеквизитФормыВЗначение("Объект");
	ОбъектОбработки.ИзменитьСостояниеДокумента(мДок, НовоеСостояние);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСведения(Команда)
	
	ОбновитьСведенияНаСервере();
	ПараметрыВСписокДокументов();
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьСведенияНаСервере()
	
	ОбъектОбработки = РеквизитФормыВЗначение("Объект");
	ОбъектОбработки.СоздатьЗаписиРегистра();
	
КонецПроцедуры


// основной функционал  (перенести в модуль обработки)
&НаКлиенте
Процедура ЗадатьДействияДляДокумента()
	
	мДок = Элементы.СписокДокументов.ТекущиеДанные.Ссылка;
	ПараметрыФормы = Новый Структура("Ключ", ПолучитьКлюч(мДок));
	
	мФорма = ПолучитьФорму("РегистрСведений.Диадок_ДействияНадДокументами.Форма.ФормаЗаписи",ПараметрыФормы);
	мФорма.Открыть();

КонецПроцедуры

&НаКлиенте
Процедура ПодключитьВнешнююОбработкуДДПро()

    АдресХранилища = "";
    Результат = ПоместитьФайл(АдресХранилища, "C:\MySpace\Bases\Петровский.ДО\Diadoc_1_0_1.epf", , Ложь);           
    ИмяОбработки = ПодключитьВнешнююОбработку(АдресХранилища);
    
КонецПроцедуры

&НаСервере
Функция ПодключитьВнешнююОбработку(АдресХранилища)

    Возврат ВнешниеОбработки.Подключить(АдресХранилища,"ОбработкаДДПро",Ложь);

КонецФункции       

Функция ОсновнаяФорма() Экспорт
	// эта хрень нужна что бы из ДДПро вызывалась КаточкаВходящегоДокумента
	Возврат неопределено;
	
КонецФункции



// тесты  ------------------------------------------
&НаСервере
Процедура ТестКомандаНаСервере()
	
	
	
КонецПроцедуры

&НаКлиенте
Процедура ТестКоманда(Команда)
	
	
	
КонецПроцедуры

